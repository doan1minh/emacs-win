gnutls_bye(3)                       gnutls                       gnutls_bye(3)



NNAAMMEE
       gnutls_bye - API function

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ggnnuuttllss//ggnnuuttllss..hh>>

       iinntt ggnnuuttllss__bbyyee((ggnnuuttllss__sseessssiioonn__tt _s_e_s_s_i_o_n,, ggnnuuttllss__cclloossee__rreeqquueesstt__tt _h_o_w));;

AARRGGUUMMEENNTTSS
       gnutls_session_t session
                   is a ggnnuuttllss__sseessssiioonn__tt structure.

       gnutls_close_request_t how
                   is an integer

DDEESSCCRRIIPPTTIIOONN
       Terminates  the  current TLS/SSL connection. The connection should have
       been  initiated  using  ggnnuuttllss__hhaannddsshhaakkee(()).    _h_o_w  should  be  one  of
       GGNNUUTTLLSS__SSHHUUTT__RRDDWWRR, GGNNUUTTLLSS__SSHHUUTT__WWRR.

       In case of GGNNUUTTLLSS__SSHHUUTT__RRDDWWRR the TLS session gets terminated and further
       receives and sends will be disallowed.  If the return value is zero you
       may  continue  using  the  underlying transport layer. GGNNUUTTLLSS__SSHHUUTT__RRDDWWRR
       sends an alert containing a close request and waits  for  the  peer  to
       reply with the same message.

       In  case  of GGNNUUTTLLSS__SSHHUUTT__WWRR the TLS session gets terminated and further
       sends will be disallowed. In order to reuse the connection  you  should
       wait  for an EOF from the peer.  GGNNUUTTLLSS__SSHHUUTT__WWRR sends an alert contain-
       ing a close request.

       Note that not all implementations will properly terminate a TLS connec-
       tion.   Some  of  them, usually for performance reasons, will terminate
       only the  underlying  transport  layer,  and  thus  not  distinguishing
       between  a  malicious  party prematurely terminating the connection and
       normal termination.

       This function may also return GGNNUUTTLLSS__EE__AAGGAAIINN  or  GGNNUUTTLLSS__EE__IINNTTEERRRRUUPPTTEEDD;
       cf.  ggnnuuttllss__rreeccoorrdd__ggeett__ddiirreeccttiioonn(()).

RREETTUURRNNSS
       GGNNUUTTLLSS__EE__SSUUCCCCEESSSS  on success, or an error code, see function documenta-
       tion for entire semantics.

RREEPPOORRTTIINNGG BBUUGGSS
       Report bugs to <bugs@gnutls.org>.
       Home page: http://www.gnutls.org


CCOOPPYYRRIIGGHHTT
       Copyright (C) 2001-2014 Free Software Foundation, Inc..
       Copying and distribution of this file, with  or  without  modification,
       are  permitted  in  any  medium  without royalty provided the copyright
       notice and this notice are preserved.

SSEEEE AALLSSOO
       The full documentation for ggnnuuttllss is maintained as  a  Texinfo  manual.
       If  the /usr/share/doc/gnutls/ directory does not contain the HTML form
       visit

       hhttttpp::////wwwwww..ggnnuuttllss..oorrgg//mmaannuuaall//

gnutls                              3.3.10                       gnutls_bye(3)
