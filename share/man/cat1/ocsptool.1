ocsptool(1)                      User Commands                     ocsptool(1)



NNAAMMEE
       ooccssppttooooll - GnuTLS OCSP tool

SSYYNNOOPPSSIISS
       ooccssppttooooll [--ffllaaggss] [--ffllaagg [_v_a_l_u_e]] [----ooppttiioonn--nnaammee[[=| ]_v_a_l_u_e]]

       All arguments must be options.


DDEESSCCRRIIPPTTIIOONN
       Ocsptool  is  a program that can parse and print information about OCSP
       requests/responses, generate requests and verify responses.


OOPPTTIIOONNSS
       --dd _n_u_m_b_e_r, ----ddeebbuugg=_n_u_m_b_e_r
              Enable debugging.  This option takes an integer  number  as  its
              argument.  The value of _n_u_m_b_e_r is constrained to being:
                  in the range  0 through 9999

              Specifies the debug level.

       --VV, ----vveerrbboossee
              More verbose output.  This option may appear an unlimited number
              of times.


       ----iinnffiillee=_f_i_l_e
              Input file.


       ----oouuttffiillee=_s_t_r_i_n_g
              Output file.


       ----aasskk [=_s_e_r_v_e_r _n_a_m_e_|_u_r_l]
              Ask an OCSP/HTTP server on a certificate validity.  This option
              must appear in combination with the following options: load-
              cert, load-issuer.

              Connects to the specified HTTP OCSP server and queries on the
              validity of the loaded certificate.

       --ee, ----vveerriiffyy--rreessppoonnssee
              Verify response.


       --ii, ----rreeqquueesstt--iinnffoo
              Print information on a OCSP request.


       --jj, ----rreessppoonnssee--iinnffoo
              Print information on a OCSP response.


       --qq, ----ggeenneerraattee--rreeqquueesstt
              Generate an OCSP request.


       ----nnoonnccee, -- FFll --nnoo--nnoonnccee
              Use (or not) a nonce to OCSP request.  The _n_o_-_n_o_n_c_e form will
              disable the option.


       ----llooaadd--iissssuueerr=_f_i_l_e
              Read issuer certificate from file.


       ----llooaadd--cceerrtt=_f_i_l_e
              Read certificate to check from file.


       ----llooaadd--ttrruusstt=_f_i_l_e
              Read OCSP trust anchors from file.  This option must not appear
              in combination with any of the following options: load-signer.


       ----llooaadd--ssiiggnneerr=_f_i_l_e
              Read OCSP response signer from file.  This option must not
              appear in combination with any of the following options: load-
              trust.


       ----iinnddeerr, -- FFll --nnoo--iinnddeerr
              Use DER format for input certificates and private keys.  The
              _n_o_-_i_n_d_e_r form will disable the option.


       --QQ _f_i_l_e, ----llooaadd--rreeqquueesstt=_f_i_l_e
              Read DER encoded OCSP request from file.


       --SS _f_i_l_e, ----llooaadd--rreessppoonnssee=_f_i_l_e
              Read DER encoded OCSP response from file.


       --hh, ----hheellpp
              Display usage information and exit.

       --!!, ----mmoorree--hheellpp
              Pass the extended usage information through a pager.

       --vv [{_v_|_c_|_n ----vveerrssiioonn [{_v_|_c_|_n}]}]
              Output version of program and exit.  The default mode is `v', a
              simple version.  The `c' mode will print copyright information
              and `n' will print the full copyright notice.

EEXXAAMMPPLLEESS
       PPrriinntt iinnffoorrmmaattiioonn aabboouutt aann OOCCSSPP rreeqquueesstt

       To parse an OCSP request and print information about the content, the
       --ii or ----rreeqquueesstt--iinnffoo parameter may be used as follows.  The --QQ parame-
       ter specify the name of the file containing the OCSP request, and it
       should contain the OCSP request in binary DER format.

           $ ocsptool -i -Q ocsp-request.der

       The input file may also be sent to standard input like this:

           $ cat ocsp-request.der | ocsptool --request-info

       PPrriinntt iinnffoorrmmaattiioonn aabboouutt aann OOCCSSPP rreessppoonnssee

       Similar to parsing OCSP requests, OCSP responses can be parsed using
       the --jj or ----rreessppoonnssee--iinnffoo as follows.

           $ ocsptool -j -Q ocsp-response.der
           $ cat ocsp-response.der | ocsptool --response-info

       GGeenneerraattee aann OOCCSSPP rreeqquueesstt

       The --qq or ----ggeenneerraattee--rreeqquueesstt parameters are used to generate an OCSP
       request.  By default the OCSP request is written to standard output in
       binary DER format, but can be stored in a file using ----oouuttffiillee.  To
       generate an OCSP request the issuer of the certificate to check needs
       to be specified with ----llooaadd--iissssuueerr and the certificate to check with
       ----llooaadd--cceerrtt.  By default PEM format is used for these files, although
       ----iinnddeerr can be used to specify that the input files are in DER format.

           $ ocsptool -q --load-issuer issuer.pem --load-cert client.pem            --outfile ocsp-request.der

       When generating OCSP requests, the tool will add an OCSP extension con-
       taining a nonce.  This behaviour can be disabled by specifying
       ----nnoo--nnoonnccee.

       VVeerriiffyy ssiiggnnaattuurree iinn OOCCSSPP rreessppoonnssee

       To verify the signature in an OCSP response the --ee or ----vveerriiffyy--rreessppoonnssee
       parameter is used.  The tool will read an OCSP response in DER format
       from standard input, or from the file specified by ----llooaadd--rreessppoonnssee.
       The OCSP response is verified against a set of trust anchors, which are
       specified using ----llooaadd--ttrruusstt.  The trust anchors are concatenated cer-
       tificates in PEM format.  The certificate that signed the OCSP response
       needs to be in the set of trust anchors, or the issuer of the signer
       certificate needs to be in the set of trust anchors and the OCSP
       Extended Key Usage bit has to be asserted in the signer certificate.

           $ ocsptool -e --load-trust issuer.pem            --load-response ocsp-response.der

       The tool will print status of verification.

       VVeerriiffyy ssiiggnnaattuurree iinn OOCCSSPP rreessppoonnssee aaggaaiinnsstt ggiivveenn cceerrttiiffiiccaattee

       It is possible to override the normal trust logic if you know that a
       certain certificate is supposed to have signed the OCSP response, and
       you want to use it to check the signature.  This is achieved using
       ----llooaadd--ssiiggnneerr instead of ----llooaadd--ttrruusstt.  This will load one certificate
       and it will be used to verify the signature in the OCSP response.  It
       will not check the Extended Key Usage bit.

           $ ocsptool -e --load-signer ocsp-signer.pem            --load-response ocsp-response.der

       This approach is normally only relevant in two situations.  The first
       is when the OCSP response does not contain a copy of the signer cer-
       tificate, so the ----llooaadd--ttrruusstt code would fail.  The second is if you
       want to avoid the indirect mode where the OCSP response signer certifi-
       cate is signed by a trust anchor.

       RReeaall--wwoorrlldd eexxaammppllee

       Here is an example of how to generate an OCSP request for a certificate
       and to verify the response.  For illustration we'll use the bblloogg..jjoosseeff--
       ssssoonn..oorrgg host, which (as of writing) uses a certificate from CACert.
       First we'll use ggnnuuttllss--ccllii to get a copy of the server certificate
       chain.  The server is not required to send this information, but this
       particular one is configured to do so.

           $ echo | gnutls-cli -p 443 blog.josefsson.org --print-cert > chain.pem

       Use a text editor on cchhaaiinn..ppeemm to create three files for each separate
       certificates, called cceerrtt..ppeemm for the first certificate for the domain
       itself, secondly iissssuueerr..ppeemm for the intermediate certificate and
       rroooott..ppeemm for the final root certificate.

       The domain certificate normally contains a pointer to where the OCSP
       responder is located, in the Authority Information Access Information
       extension.  For example, from cceerrttttooooll --ii << cceerrtt..ppeemm there is this
       information:

           Authority Information Access Information (not critical):
           Access Method: 1.3.6.1.5.5.7.48.1 (id-ad-ocsp)
           Access Location URI: http://ocsp.CAcert.org/

       This means the CA support OCSP queries over HTTP.  We are now ready to
       create a OCSP request for the certificate.

           $ ocsptool --ask ocsp.CAcert.org --load-issuer issuer.pem            --load-cert cert.pem --outfile ocsp-response.der

       The request is sent via HTTP to the OCSP server address specified. If
       the address is ommited ocsptool will use the address stored in the cer-
       tificate.


EEXXIITT SSTTAATTUUSS
       One of the following exit values will be returned:

       0  (EXIT_SUCCESS)
              Successful program execution.

       1  (EXIT_FAILURE)
              The operation failed or the command syntax was not valid.

       70  (EX_SOFTWARE)
              libopts had an internal operational error.  Please report it to
              autogen-users@lists.sourceforge.net.  Thank you.

SSEEEE AALLSSOO
           certtool (1)

AAUUTTHHOORRSS
       Nikos Mavrogiannopoulos, Simon Josefsson and others; see
       /usr/share/doc/gnutls/AUTHORS for a complete list.

CCOOPPYYRRIIGGHHTT
       Copyright (C) 2000-2014 Free Software Foundation, and others all rights
       reserved.  This program is released under the terms of the GNU General
       Public License, version 3 or later.

BBUUGGSS
       Please send bug reports to: bugs@gnutls.org

NNOOTTEESS
       This manual page was _A_u_t_o_G_e_n-erated from the ooccssppttooooll option defini-
       tions.



3.3.11                            11 Dec 2014                      ocsptool(1)
