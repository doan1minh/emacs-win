gnutls-cli(1)                    User Commands                   gnutls-cli(1)



NNAAMMEE
       ggnnuuttllss--ccllii - GnuTLS client

SSYYNNOOPPSSIISS
       ggnnuuttllss--ccllii  [--ffllaaggss] [--ffllaagg [_v_a_l_u_e]] [----ooppttiioonn--nnaammee[[=| ]_v_a_l_u_e]] [host-
       name]

       Operands and options may be intermixed.  They will be reordered.


DDEESSCCRRIIPPTTIIOONN
       Simple client program to set up a TLS connection  to  some  other  com-
       puter.  It sets up a TLS connection and forwards data from the standard
       input to the secured socket and vice versa.

OOPPTTIIOONNSS
       --dd _n_u_m_b_e_r, ----ddeebbuugg=_n_u_m_b_e_r
              Enable debugging.  This option takes an integer  number  as  its
              argument.  The value of _n_u_m_b_e_r is constrained to being:
                  in the range  0 through 9999

              Specifies the debug level.

       --VV, ----vveerrbboossee
              More verbose output.  This option may appear an unlimited number
              of times.


       ----ttooffuu, -- FFll --nnoo--ttooffuu
              Enable trust on first use authentication.  The _n_o_-_t_o_f_u form will
              disable the option.

              This option will, in addition to certificate authentication,
              perform authentication based on previously seen public keys, a
              model similar to SSH authentication. Note that when tofu is
              specified (PKI) and DANE authentication will become advisory to
              assist the public key acceptance process.

       ----ssttrriicctt--ttooffuu, -- FFll --nnoo--ssttrriicctt--ttooffuu
              Fail to connect if a known certificate has changed.  The
              _n_o_-_s_t_r_i_c_t_-_t_o_f_u form will disable the option.

              This option will perform authentication as with option --tofu;
              however, while --tofu asks whether to trust a changed public
              key, this option will fail in case of public key changes.

       ----ddaannee, -- FFll --nnoo--ddaannee
              Enable DANE certificate verification (DNSSEC).  The _n_o_-_d_a_n_e form
              will disable the option.

              This option will, in addition to certificate authentication
              using the trusted CAs, verify the server certificates using on
              the DANE information available via DNSSEC.

       ----llooccaall--ddnnss, -- FFll --nnoo--llooccaall--ddnnss
              Use the local DNS server for DNSSEC resolving.  The _n_o_-_l_o_c_a_l_-_d_n_s
              form will disable the option.

              This option will use the local DNS server for DNSSEC.  This is
              disabled by default due to many servers not allowing DNSSEC.

       ----ccaa--vveerriiffiiccaattiioonn, -- FFll --nnoo--ccaa--vveerriiffiiccaattiioonn
              Disable CA certificate verification.  The _n_o_-_c_a_-_v_e_r_i_f_i_c_a_t_i_o_n
              form will disable the option.  This option is enabled by
              default.

              This option will disable CA certificate verification. It is to
              be used with the --dane or --tofu options.

       ----ooccsspp, -- FFll --nnoo--ooccsspp
              Enable OCSP certificate verification.  The _n_o_-_o_c_s_p form will
              disable the option.

              This option will enable verification of the peer's certificate
              using ocsp

       --rr, ----rreessuummee
              Establish a session and resume.

              Connect, establish a session, reconnect and resume.

       --ee, ----rreehhaannddsshhaakkee
              Establish a session and rehandshake.

              Connect, establish a session and rehandshake immediately.

       --ss, ----ssttaarrttttllss
              Connect, establish a plain session and start TLS.

              The TLS session will be initiated when EOF or a SIGALRM is
              received.

       --uu, ----uuddpp
              Use DTLS (datagram TLS) over UDP.


       ----mmttuu=_n_u_m_b_e_r
              Set MTU for datagram TLS.  This option takes an integer number
              as its argument.  The value of _n_u_m_b_e_r is constrained to being:
                  in the range  0 through 17000


       ----ccrrllff Send CR LF instead of LF.


       ----xx550099ffmmttddeerr
              Use DER format for certificates to read from.


       --ff, ----ffiinnggeerrpprriinntt
              Send the openpgp fingerprint, instead of the key.


       ----pprriinntt--cceerrtt
              Print peer's certificate in PEM format.


       ----ddhh--bbiittss=_n_u_m_b_e_r
              The minimum number of bits allowed for DH.  This option takes an
              integer number as its argument.

              This option sets the minimum number of bits allowed for a
              Diffie-Hellman key exchange. You may want to lower the default
              value if the peer sends a weak prime and you get an connection
              error with unacceptable prime.

       ----pprriioorriittyy=_s_t_r_i_n_g
              Priorities string.

              TLS algorithms and protocols to enable. You can use predefined
              sets of ciphersuites such as PERFORMANCE, NORMAL, PFS,
              SECURE128, SECURE256. The default is NORMAL.

              Check  the  GnuTLS  manual  on  section  "Priority strings" for
              more information on the allowed keywords

       ----xx550099ccaaffiillee=_s_t_r_i_n_g
              Certificate file or PKCS #11 URL to use.


       ----xx550099ccrrllffiillee=_f_i_l_e
              CRL file to use.


       ----ppggppkkeeyyffiillee=_f_i_l_e
              PGP Key file to use.


       ----ppggppkkeeyyrriinngg=_f_i_l_e
              PGP Key ring file to use.


       ----ppggppcceerrttffiillee=_f_i_l_e
              PGP Public Key (certificate) file to use.


       ----xx550099kkeeyyffiillee=_s_t_r_i_n_g
              X.509 key file or PKCS #11 URL to use.


       ----xx550099cceerrttffiillee=_s_t_r_i_n_g
              X.509 Certificate file or PKCS #11 URL to use.


       ----ppggppssuubbkkeeyy=_s_t_r_i_n_g
              PGP subkey to use (hex or auto).


       ----ssrrppuusseerrnnaammee=_s_t_r_i_n_g
              SRP username to use.


       ----ssrrppppaasssswwdd=_s_t_r_i_n_g
              SRP password to use.


       ----ppsskkuusseerrnnaammee=_s_t_r_i_n_g
              PSK username to use.


       ----ppsskkkkeeyy=_s_t_r_i_n_g
              PSK key (in hex) to use.


       --pp _s_t_r_i_n_g, ----ppoorrtt=_s_t_r_i_n_g
              The port or service to connect to.


       ----iinnsseeccuurree
              Don't abort program if server certificate can't be validated.


       ----rraannggeess
              Use length-hiding padding to prevent traffic analysis.

              When possible (e.g., when using CBC ciphersuites), use length-
              hiding padding to prevent traffic analysis.

       ----bbeenncchhmmaarrkk--cciipphheerrss
              Benchmark individual ciphers.


       ----bbeenncchhmmaarrkk--ttllss--kkxx
              Benchmark TLS key exchange methods.


       ----bbeenncchhmmaarrkk--ttllss--cciipphheerrss
              Benchmark TLS ciphers.


       --ll, ----lliisstt
              Print a list of the supported algorithms and modes.  This option
              must not appear in combination with any of the following
              options: port.

              Print a list of the supported algorithms and modes. If a prior-
              ity string is given then only the enabled ciphersuites are
              shown.

       ----nnoottiicckkeett
              Don't allow session tickets.


       ----ssrrttpp--pprrooffiilleess=_s_t_r_i_n_g
              Offer SRTP profiles.


       ----aallppnn=_s_t_r_i_n_g
              Application layer protocol.  This option may appear an unlimited
              number of times.

              This option will set and enable the Application Layer Protocol
              Negotiation  (ALPN) in the TLS protocol.

       --bb, ----hheeaarrttbbeeaatt
              Activate heartbeat support.


       ----rreeccoorrddssiizzee=_n_u_m_b_e_r
              The maximum record size to advertize.  This option takes an
              integer number as its argument.  The value of _n_u_m_b_e_r is con-
              strained to being:
                  in the range  0 through 4096


       ----ddiissaabbllee--ssnnii
              Do not send a Server Name Indication (SNI).


       ----ddiissaabbllee--eexxtteennssiioonnss
              Disable all the TLS extensions.

              This option disables all TLS extensions. Deprecated option. Use
              the priority string.

       ----iinnlliinnee--ccoommmmaannddss
              Inline commands of the form ^<cmd>^.

              Enable inline commands of the form ^<cmd>^. The inline commands
              are expected to be in a line by themselves. The available com-
              mands are: resume and renegotiate.

       ----iinnlliinnee--ccoommmmaannddss--pprreeffiixx=_s_t_r_i_n_g
              Change the default (^) used as a delimiter for inline commands.
                                  The value is a single US-ASCII character
              (octets 0 - 127)..

              Change the default (^) delimiter used for inline commands. The
              delimiter is expected to be a single US-ASCII character (octets
              0 - 127). This option is only relevant if inline commands are
              enabled via the inline-commands option

       ----pprroovviiddeerr=_f_i_l_e
              Specify the PKCS #11 provider library.

              This will override the default options in
              /etc/gnutls/pkcs11.conf

       ----ffiippss114400--mmooddee
              Reports the status of the FIPS140-2 mode in gnutls library.


       --hh, ----hheellpp
              Display usage information and exit.

       --!!, ----mmoorree--hheellpp
              Pass the extended usage information through a pager.

       --vv [{_v_|_c_|_n ----vveerrssiioonn [{_v_|_c_|_n}]}]
              Output version of program and exit.  The default mode is `v', a
              simple version.  The `c' mode will print copyright information
              and `n' will print the full copyright notice.

EEXXAAMMPPLLEESS
       CCoonnnneeccttiinngg uussiinngg PPSSKK aauutthheennttiiccaattiioonn
       To connect to a server using PSK authentication, you need to enable the
       choice of PSK by using a cipher priority parameter such as in the exam-
       ple below.
           $ ./gnutls-cli -p 5556 localhost --pskusername psk_identity     --pskkey 88f3824b3e5659f52d00e959bacab954b6540344     --priority NORMAL:-KX-ALL:+ECDHE-PSK:+DHE-PSK:+PSK
           Resolving 'localhost'...
           Connecting to '127.0.0.1:5556'...
           - PSK authentication.
           - Version: TLS1.1
           - Key Exchange: PSK
           - Cipher: AES-128-CBC
           - MAC: SHA1
           - Compression: NULL
           - Handshake was completed
           - Simple Client Mode:
       By keeping the --pskusername parameter and removing the --pskkey param-
       eter, it will query only for the password during the handshake.

       LLiissttiinngg cciipphheerrssuuiitteess iinn aa pprriioorriittyy ssttrriinngg
       To list the ciphersuites in a priority string:
           $ ./gnutls-cli --priority SECURE192 -l
           Cipher suites for SECURE192
           TLS_ECDHE_ECDSA_AES_256_CBC_SHA384         0xc0, 0x24  TLS1.2
           TLS_ECDHE_ECDSA_AES_256_GCM_SHA384         0xc0, 0x2e  TLS1.2
           TLS_ECDHE_RSA_AES_256_GCM_SHA384           0xc0, 0x30  TLS1.2
           TLS_DHE_RSA_AES_256_CBC_SHA256             0x00, 0x6b  TLS1.2
           TLS_DHE_DSS_AES_256_CBC_SHA256             0x00, 0x6a  TLS1.2
           TLS_RSA_AES_256_CBC_SHA256                 0x00, 0x3d  TLS1.2

           Certificate types: CTYPE-X.509
           Protocols: VERS-TLS1.2, VERS-TLS1.1, VERS-TLS1.0, VERS-SSL3.0, VERS-DTLS1.0
           Compression: COMP-NULL
           Elliptic curves: CURVE-SECP384R1, CURVE-SECP521R1
           PK-signatures: SIGN-RSA-SHA384, SIGN-ECDSA-SHA384, SIGN-RSA-SHA512, SIGN-ECDSA-SHA512

       CCoonnnneeccttiinngg uussiinngg aa PPKKCCSS ##1111 ttookkeenn
       To connect to a server using a certificate and a private key present in
       a PKCS #11 token you need to substitute the PKCS 11 URLs in the
       x509certfile and x509keyfile parameters.

       Those can be found using "p11tool --list-tokens" and then listing all
       the objects in the needed token, and using the appropriate.
           $ p11tool --list-tokens

           Token 0:
           URL: pkcs11:model=PKCS15;manufacturer=MyMan;serial=1234;token=Test
           Label: Test
           Manufacturer: EnterSafe
           Model: PKCS15
           Serial: 1234

           $ p11tool --login --list-certs "pkcs11:model=PKCS15;manufacturer=MyMan;serial=1234;token=Test"

           Object 0:
           URL: pkcs11:model=PKCS15;manufacturer=MyMan;serial=1234;token=Test;object=client;object-type=cert
           Type: X.509 Certificate
           Label: client
           ID: 2a:97:0d:58:d1:51:3c:23:07:ae:4e:0d:72:26:03:7d:99:06:02:6a

           $ export MYCERT="pkcs11:model=PKCS15;manufacturer=MyMan;serial=1234;token=Test;object=client;object-type=cert"
           $ export MYKEY="pkcs11:model=PKCS15;manufacturer=MyMan;serial=1234;token=Test;object=client;object-type=private"

           $ gnutls-cli www.example.com --x509keyfile $MYKEY --x509certfile MYCERT
       Notice that the private key only differs from the certificate in the
       object-type.

EEXXIITT SSTTAATTUUSS
       One of the following exit values will be returned:

       0  (EXIT_SUCCESS)
              Successful program execution.

       1  (EXIT_FAILURE)
              The operation failed or the command syntax was not valid.

       70  (EX_SOFTWARE)
              libopts had an internal operational error.  Please report it to
              autogen-users@lists.sourceforge.net.  Thank you.

SSEEEE AALLSSOO
       gnutls-cli-debug(1), gnutls-serv(1)

AAUUTTHHOORRSS
       Nikos Mavrogiannopoulos, Simon Josefsson and others; see
       /usr/share/doc/gnutls/AUTHORS for a complete list.

CCOOPPYYRRIIGGHHTT
       Copyright (C) 2000-2014 Free Software Foundation, and others all rights
       reserved.  This program is released under the terms of the GNU General
       Public License, version 3 or later.

BBUUGGSS
       Please send bug reports to: bugs@gnutls.org

NNOOTTEESS
       This manual page was _A_u_t_o_G_e_n-erated from the ggnnuuttllss--ccllii option defini-
       tions.



3.3.11                            11 Dec 2014                    gnutls-cli(1)
